<%= tr8n_with_options_tag(:source => 'app/wizards/application') do %>
  <div class="wizard" id="new-application-wizard">
    <h1><%=tra("Register New Application") %></h1>

    <div class="wizard-card" data-cardname="card1">
      <h3><%=tra("Application Details") %></h3>

      <div class="wizard-input-section">
        <p>
          To begin, please enter your application name.
        </p>

        <div class="control-group">
          <%=text_field_tag(:new_application_name, "", :placeholder => "Name", :class=>"input-xlarge", "data-validate" => "validateName" ) %>
        </div>
      </div>

      <div class="wizard-input-section">
        <p>
          Optionally, provide a description for this application.
        </p>

        <div class="control-group">
          <%=text_area_tag(:new_application_description, "", :placeholder => "Description", :style=>"width:400px;height:80px;") %>
        </div>
      </div>

    </div>

    <div class="wizard-card" data-cardname="card2">
      <h3>Domains</h3>

      <div class="wizard-input-section">
        <p>
          For extra security, you can restrict Tr8n API access to only domains listed below.
        </p>

        <div class="control-group">
          <%=text_area_tag(:new_application_domains, "", :placeholder => "www.sample.com", :style=>"width:400px;height:80px;") %>
          <p class="muted">
            Enter one domain per line
          </p>
        </div>

      </div>
    </div>

    <div class="wizard-card" data-cardname="card2">
      <h3>Languages</h3>

      <div class="wizard-input-section">
        <p>
          What is the main language of your application?
        </p>

        <div class="control-group">
          <select id="new_application_default_language" data-placeholder="Primary language" style="width:400px;" class="chzn-select">
            <option value=""></option>
            <% Tr8n::Language.enabled_languages.each do |lang| %>
              <option <%="selected" if lang.default? %> value="<%=lang.locale%>"><%=lang.english_name%></option>
            <% end %>
          </select>
        </div>
      </div>

      <div class="wizard-input-section">
        <p>
          Enter a list of languages you want to support in your application.
        </p>

        <div class="control-group">
          <select id="new_application_languages" data-placeholder="Languages" multiple class="chzn-select" style="width:400px;">
            <option value=""></option>
            <% Tr8n::Language.enabled_languages.each do |lang| %>
              <option value="<%=lang.locale%>"><%=lang.english_name%></option>
            <% end %>
          </select>
        </div>
      </div>
    </div>

    <div class="wizard-card" data-cardname="card2">
      <h3>Translators</h3>

      <div class="wizard-input-section">
        <p>
          Optionally, enter a list of email addresses for translators you want to invite to help you translate your app.
        </p>

        <div class="control-group">
          <%=text_field_tag(:new_application_translators, "") %>
        </div>
      </div>
    </div>

    <div class="wizard-error">
      <div class="alert alert-error create-application-error-message">
      </div>
    </div>

    <div class="wizard-failure">
      <div class="alert alert-error create-application-failure-message">
      </div>
    </div>

    <div class="wizard-success">
      <div class="alert alert-success create-application-success-message">
      </div>
    </div>

  </div>

  <script>
    function validateEmail(email) {
      var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
      return re.test(email);
    }

    function validateName(el) {
      var val = el.val();
      ret = {
        status: true
      };
      if (val == "") {
        ret.status = false;
        ret.msg = "Name must not be empty";
      }
      return ret;
    }

    function validateDomains(el) {
      var val = el.val();
      ret = {
        status: true
      };
      if (val == "") {
        ret.status = false;
        ret.msg = "At least one valid domain must be provided";
      }
      return ret;
    }

    (function() {
      var wizard = $("#new-application-wizard").wizard({});

      $("#new_application_default_language").chosen({});
      $("#new_application_languages").chosen({});

      $('#new_application_translators').tagsInput({
        'height':'150px',
        'width':'420px',
        'interactive':true,
        'defaultText':'Enter email',
        'onAddTag': function(tag) {
          if (!validateEmail(tag)) {
            alert("Invalid email address");
            $('#translators').removeTag(tag);
            return false;
          }
        }
      });

      wizard.on("reset", function(wizard) {
        location.reload();
      });

      wizard.on("submit", function(wizard) {
        var jqxhr = $.post("/tr8n/app/wizards/application", {
          "name": $("#new_application_name").val(),
          "description": $("#new_application_description").val(),
          "domains": $("#new_application_domains").val(),
          "default_locale": $("#new_application_default_language").val(),
          "locales": $("#new_application_languages").val(),
          "translators": $("#new_application_translators").val()
        }).done(function(params) {
            if (params["error"]) {
              $(".create-application-error-message").html(params['error']);
              wizard.trigger("failure");
              wizard.hideButtons();
              wizard.showSubmitCard("failure");
              return;
            }

            $(".create-application-success-message").html(params['msg']);
            wizard.trigger("success");
            wizard.hideButtons();
            wizard.showSubmitCard("success");

            window.setTimeout(function() {
              location.reload();
            }, 500);

        }).fail(function() {
            $(".create-application-failure-message").html("Failed to submit the wizard. Please try again later.");
            wizard.trigger("failure");
            wizard.hideButtons();
            wizard.showSubmitCard("failure");
        });
      });

      wizard.show();
    })();
  </script>
<% end %>